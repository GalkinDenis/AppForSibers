// Generated by Dagger (https://dagger.dev).
package com.denis.appForSibersTeam.app.modules;

import com.denis.appForSibersTeam.data.ItemDao;
import com.denis.appForSibersTeam.data.ItemRoomDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DataModule_ProvideDaoFactory implements Factory<ItemDao> {
  private final Provider<ItemRoomDatabase> dataBaseProvider;

  public DataModule_ProvideDaoFactory(Provider<ItemRoomDatabase> dataBaseProvider) {
    this.dataBaseProvider = dataBaseProvider;
  }

  @Override
  public ItemDao get() {
    return provideDao(dataBaseProvider.get());
  }

  public static DataModule_ProvideDaoFactory create(Provider<ItemRoomDatabase> dataBaseProvider) {
    return new DataModule_ProvideDaoFactory(dataBaseProvider);
  }

  public static ItemDao provideDao(ItemRoomDatabase dataBase) {
    return Preconditions.checkNotNullFromProvides(DataModule.INSTANCE.provideDao(dataBase));
  }
}
