// Generated by Dagger (https://dagger.dev).
package com.denis.appForSibersTeam.app.modules;

import android.content.Context;
import com.denis.appForSibersTeam.data.ItemRoomDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DataModule_ProvideDataBaseFactory implements Factory<ItemRoomDatabase> {
  private final Provider<Context> contextProvider;

  public DataModule_ProvideDataBaseFactory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public ItemRoomDatabase get() {
    return provideDataBase(contextProvider.get());
  }

  public static DataModule_ProvideDataBaseFactory create(Provider<Context> contextProvider) {
    return new DataModule_ProvideDataBaseFactory(contextProvider);
  }

  public static ItemRoomDatabase provideDataBase(Context context) {
    return Preconditions.checkNotNullFromProvides(DataModule.INSTANCE.provideDataBase(context));
  }
}
