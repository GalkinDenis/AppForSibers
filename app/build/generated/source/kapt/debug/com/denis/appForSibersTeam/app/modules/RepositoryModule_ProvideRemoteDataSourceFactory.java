// Generated by Dagger (https://dagger.dev).
package com.denis.appForSibersTeam.app.modules;

import com.denis.appForSibersTeam.network.RemoteDataSource;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepositoryModule_ProvideRemoteDataSourceFactory implements Factory<RemoteDataSource> {
  @Override
  public RemoteDataSource get() {
    return provideRemoteDataSource();
  }

  public static RepositoryModule_ProvideRemoteDataSourceFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static RemoteDataSource provideRemoteDataSource() {
    return Preconditions.checkNotNullFromProvides(RepositoryModule.INSTANCE.provideRemoteDataSource());
  }

  private static final class InstanceHolder {
    private static final RepositoryModule_ProvideRemoteDataSourceFactory INSTANCE = new RepositoryModule_ProvideRemoteDataSourceFactory();
  }
}
